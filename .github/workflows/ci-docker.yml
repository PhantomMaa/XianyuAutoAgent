name: Docker Image CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Get version
        id: version
        run: echo "ver=$(git describe --tags --abbrev=0 2>/dev/null || echo 'v0.0.0')" >> $GITHUB_OUTPUT
      
      # 设置 Docker Buildx 缓存
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest
          driver-opts: |
            image=moby/buildkit:latest
      
      # 设置 QEMU 以支持多架构构建
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,amd64
      
      # 使用 GitHub Actions 缓存来存储 Docker 层
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # 构建多架构镜像，但使用优化的缓存策略
      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          tags: |
            ghcr.io/phantommaa/xianyu-auto-agent:${{ steps.version.outputs.ver }}
            ghcr.io/phantommaa/xianyu-auto-agent:latest
          labels: |
            org.opencontainers.image.title=XianyuAutoAgent
            org.opencontainers.image.description=AI-powered customer service bot for Xianyu platform
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.version.outputs.ver }}
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
          build-args: |
            BUILDKIT_INLINE_CACHE=1
      
      # 移动缓存
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache